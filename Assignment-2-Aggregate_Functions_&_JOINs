Assignment - 2 (SQL | Aggregate Functions & JOINs)

 Instructions:  
  There are multiple questions.
  Use chinook database to answer the questions.
  Please paste your answers (statements) as a plain text using the related question number.
  Good Luck!

Questions:

1. How many tracks does each album have? Your solution should include Album id and its number of tracks sorted from highest to lowest.

  SELECT AlbumId, COUNT(TrackId) AS number_of_tracks
  FROM tracks
  GROUP BY AlbumId
  ORDER BY number_of_tracks DESC;

2. Find the album title of the tracks. Your solution should include track name and its album title.

  SELECT tracks.name, albums.Title
  FROM tracks
  INNER JOIN albums 
  ON tracks.AlbumId = albums.AlbumId;

3. Find the minimum duration of the track in an album. Your solution should include track name, album id, album title and duration of the track sorted from highest to lowest.

  SELECT tracks.name, tracks.AlbumId, albums.Title, MIN(tracks.Milliseconds) AS min_duration
  FROM tracks
  INNER JOIN albums 
  ON tracks.AlbumId = albums.AlbumId
  GROUP BY tracks.AlbumId
  ORDER BY min_duration DESC;

4. Find the total duration of each album. Your solution should include track name, album id, album title and its total duration sorted from highest to lowest.

  SELECT tracks.name, tracks.AlbumId, albums.Title, SUM(tracks.Milliseconds) AS total_duration
  FROM tracks
  INNER JOIN albums 
  ON tracks.AlbumId = albums.AlbumId
  GROUP BY tracks.AlbumId
  ORDER BY total_duration DESC;

5. Based on the previous question, find the albums whose total duration is higher than 70 minutes. Your solution should include album title and total duration.

  SELECT albums.Title, SUM(tracks.Milliseconds) AS total_duration
  FROM tracks
  INNER JOIN albums 
  ON tracks.AlbumId = albums.AlbumId
  GROUP BY albums.Title
  HAVING total_duration > 4200000
  ORDER BY total_duration DESC;

